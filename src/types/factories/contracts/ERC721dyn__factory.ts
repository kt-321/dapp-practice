/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

import type { PromiseOrValue } from "../../common";
import type { ERC721dyn, ERC721dynInterface } from "../../contracts/ERC721dyn";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseExtension",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f45524337323164796e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f44594e000000000000000000000000000000000000000000000000000000000081525081600290816200008f919062000456565b508060039081620000a1919062000456565b50620000b26200010b60201b60201c565b6000819055505050620001056040518060400160405280600b81526020017f636f6e7374727563746f720000000000000000000000000000000000000000008152506200011060201b62000e7a1760201c565b620005f0565b600090565b620001b081604051602401620001279190620005cc565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620001b360201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200025e57607f821691505b60208210810362000274576200027362000216565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002de7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200029f565b620002ea86836200029f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000337620003316200032b8462000302565b6200030c565b62000302565b9050919050565b6000819050919050565b620003538362000316565b6200036b62000362826200033e565b848454620002ac565b825550505050565b600090565b6200038262000373565b6200038f81848462000348565b505050565b5b81811015620003b757620003ab60008262000378565b60018101905062000395565b5050565b601f8211156200040657620003d0816200027a565b620003db846200028f565b81016020851015620003eb578190505b62000403620003fa856200028f565b83018262000394565b50505b505050565b600082821c905092915050565b60006200042b600019846008026200040b565b1980831691505092915050565b600062000446838362000418565b9150826002028217905092915050565b6200046182620001dc565b67ffffffffffffffff8111156200047d576200047c620001e7565b5b62000489825462000245565b62000496828285620003bb565b600060209050601f831160018114620004ce5760008415620004b9578287015190505b620004c5858262000438565b86555062000535565b601f198416620004de866200027a565b60005b828110156200050857848901518255600182019150602085019450602081019050620004e1565b8683101562000528578489015162000524601f89168262000418565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b60005b838110156200056e57808201518184015260208101905062000551565b60008484015250505050565b6000601f19601f8301169050919050565b60006200059882620001dc565b620005a481856200053d565b9350620005b68185602086016200054e565b620005c1816200057a565b840191505092915050565b60006020820190508181036000830152620005e881846200058b565b905092915050565b611a9180620006006000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063b88d4fde11610059578063b88d4fde146102df578063c6682862146102fb578063c87b56dd14610326578063e985e9c514610363576100e8565b80636352211e1461021157806370a082311461024e57806395d89b411461028b578063a22cb465146102b6576100e8565b8063095ea7b3116100c6578063095ea7b31461019257806318160ddd146101ae57806323b872dd146101d957806342842e0e146101f5576100e8565b806301ffc9a7146100ed57806306fdde031461012a578063081812fc14610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f919061136a565b6103a0565b60405161012191906113b2565b60405180910390f35b34801561013657600080fd5b5061013f610432565b60405161014c919061145d565b60405180910390f35b34801561016157600080fd5b5061017c600480360381019061017791906114b5565b6104c4565b6040516101899190611523565b60405180910390f35b6101ac60048036038101906101a7919061156a565b610543565b005b3480156101ba57600080fd5b506101c3610687565b6040516101d091906115b9565b60405180910390f35b6101f360048036038101906101ee91906115d4565b61069e565b005b61020f600480360381019061020a91906115d4565b6109c0565b005b34801561021d57600080fd5b50610238600480360381019061023391906114b5565b6109e0565b6040516102459190611523565b60405180910390f35b34801561025a57600080fd5b5061027560048036038101906102709190611627565b6109f2565b60405161028291906115b9565b60405180910390f35b34801561029757600080fd5b506102a0610aaa565b6040516102ad919061145d565b60405180910390f35b3480156102c257600080fd5b506102dd60048036038101906102d89190611680565b610b3c565b005b6102f960048036038101906102f491906117f5565b610c47565b005b34801561030757600080fd5b50610310610cba565b60405161031d919061145d565b60405180910390f35b34801561033257600080fd5b5061034d600480360381019061034891906114b5565b610d48565b60405161035a919061145d565b60405180910390f35b34801561036f57600080fd5b5061038a60048036038101906103859190611878565b610de6565b60405161039791906113b2565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fb57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061042b5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060028054610441906118e7565b80601f016020809104026020016040519081016040528092919081815260200182805461046d906118e7565b80156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b5050505050905090565b60006104cf82610f13565b610505576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061054e826109e0565b90508073ffffffffffffffffffffffffffffffffffffffff1661056f610f72565b73ffffffffffffffffffffffffffffffffffffffff16146105d25761059b81610596610f72565b610de6565b6105d1576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610691610f7a565b6001546000540303905090565b60006106a982610f7f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610710576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061071c8461104b565b91509150610732818761072d610f72565b611072565b61077e5761074786610742610f72565b610de6565b61077d576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107e4576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f186868660016110b6565b80156107fc57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108ca856108a68888876110bc565b7c0200000000000000000000000000000000000000000000000000000000176110e4565b600460008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841603610950576000600185019050600060046000838152602001908152602001600020540361094e57600054811461094d578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109b8868686600161110f565b505050505050565b6109db83838360405180602001604052806000815250610c47565b505050565b60006109eb82610f7f565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a59576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610ab9906118e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae5906118e7565b8015610b325780601f10610b0757610100808354040283529160200191610b32565b820191906000526020600020905b815481529060010190602001808311610b1557829003601f168201915b5050505050905090565b8060076000610b49610f72565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bf6610f72565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c3b91906113b2565b60405180910390a35050565b610c5284848461069e565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610cb457610c7d84848484611115565b610cb3576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b60098054610cc7906118e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf3906118e7565b8015610d405780601f10610d1557610100808354040283529160200191610d40565b820191906000526020600020905b815481529060010190602001808311610d2357829003601f168201915b505050505081565b6060610d5382610f13565b610d89576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d93611265565b90506000815103610db35760405180602001604052806000815250610dde565b80610dbd8461127c565b604051602001610dce929190611954565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610f1081604051602401610e8e919061145d565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112cc565b50565b600081610f1e610f7a565b11158015610f2d575060005482105b8015610f6b575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610f8e610f7a565b11611014576000548110156110135760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603611011575b60008103611007576004600083600190039350838152602001908152602001600020549050610fdd565b8092505050611046565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e86110d38686846112f5565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261113b610f72565b8786866040518563ffffffff1660e01b815260040161115d94939291906119cd565b6020604051808303816000875af192505050801561119957506040513d601f19601f820116820180604052508101906111969190611a2e565b60015b611212573d80600081146111c9576040519150601f19603f3d011682016040523d82523d6000602084013e6111ce565b606091505b50600081510361120a576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b6001156112b757600184039350600a81066030018453600a8104905080611295575b50828103602084039350808452505050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61134781611312565b811461135257600080fd5b50565b6000813590506113648161133e565b92915050565b6000602082840312156113805761137f611308565b5b600061138e84828501611355565b91505092915050565b60008115159050919050565b6113ac81611397565b82525050565b60006020820190506113c760008301846113a3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114075780820151818401526020810190506113ec565b60008484015250505050565b6000601f19601f8301169050919050565b600061142f826113cd565b61143981856113d8565b93506114498185602086016113e9565b61145281611413565b840191505092915050565b600060208201905081810360008301526114778184611424565b905092915050565b6000819050919050565b6114928161147f565b811461149d57600080fd5b50565b6000813590506114af81611489565b92915050565b6000602082840312156114cb576114ca611308565b5b60006114d9848285016114a0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061150d826114e2565b9050919050565b61151d81611502565b82525050565b60006020820190506115386000830184611514565b92915050565b61154781611502565b811461155257600080fd5b50565b6000813590506115648161153e565b92915050565b6000806040838503121561158157611580611308565b5b600061158f85828601611555565b92505060206115a0858286016114a0565b9150509250929050565b6115b38161147f565b82525050565b60006020820190506115ce60008301846115aa565b92915050565b6000806000606084860312156115ed576115ec611308565b5b60006115fb86828701611555565b935050602061160c86828701611555565b925050604061161d868287016114a0565b9150509250925092565b60006020828403121561163d5761163c611308565b5b600061164b84828501611555565b91505092915050565b61165d81611397565b811461166857600080fd5b50565b60008135905061167a81611654565b92915050565b6000806040838503121561169757611696611308565b5b60006116a585828601611555565b92505060206116b68582860161166b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61170282611413565b810181811067ffffffffffffffff82111715611721576117206116ca565b5b80604052505050565b60006117346112fe565b905061174082826116f9565b919050565b600067ffffffffffffffff8211156117605761175f6116ca565b5b61176982611413565b9050602081019050919050565b82818337600083830152505050565b600061179861179384611745565b61172a565b9050828152602081018484840111156117b4576117b36116c5565b5b6117bf848285611776565b509392505050565b600082601f8301126117dc576117db6116c0565b5b81356117ec848260208601611785565b91505092915050565b6000806000806080858703121561180f5761180e611308565b5b600061181d87828801611555565b945050602061182e87828801611555565b935050604061183f878288016114a0565b925050606085013567ffffffffffffffff8111156118605761185f61130d565b5b61186c878288016117c7565b91505092959194509250565b6000806040838503121561188f5761188e611308565b5b600061189d85828601611555565b92505060206118ae85828601611555565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118ff57607f821691505b602082108103611912576119116118b8565b5b50919050565b600081905092915050565b600061192e826113cd565b6119388185611918565b93506119488185602086016113e9565b80840191505092915050565b60006119608285611923565b915061196c8284611923565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061199f82611978565b6119a98185611983565b93506119b98185602086016113e9565b6119c281611413565b840191505092915050565b60006080820190506119e26000830187611514565b6119ef6020830186611514565b6119fc60408301856115aa565b8181036060830152611a0e8184611994565b905095945050505050565b600081519050611a288161133e565b92915050565b600060208284031215611a4457611a43611308565b5b6000611a5284828501611a19565b9150509291505056fea2646970667358221220ed8dae6541a51f786c4d56dbaf5871bbd49071af91475a517dc4c3105673068c64736f6c63430008110033";

type ERC721dynConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ERC721dynConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class ERC721dyn__factory extends ContractFactory {
  constructor(...args: ERC721dynConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ERC721dyn> {
    return super.deploy(overrides || {}) as Promise<ERC721dyn>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721dyn {
    return super.attach(address) as ERC721dyn;
  }
  override connect(signer: Signer): ERC721dyn__factory {
    return super.connect(signer) as ERC721dyn__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721dynInterface {
    return new utils.Interface(_abi) as ERC721dynInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721dyn {
    return new Contract(address, _abi, signerOrProvider) as ERC721dyn;
  }
}
